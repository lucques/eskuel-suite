<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<game>
    <head>
        <title>SQL Island</title>
        <teaser>Der Klassiker! (Aus Urheberrechtsgr&#xFC;nden sind nur die ersten Szenen enthalten)</teaser>
        <copyright>&#xA9; Johannes Schildgen, TU Kaiserslautern, https://sql-island.informatik.uni-kl.de</copyright>
    </head>
    <scenes>
        <text-scene>
            <text>Nach einem Flugzeugabsturz stellst du fest, dass du der einzige &#xDC;berlebende bist. Du landest auf der Insel SQL Island und das Ziel des Spiels ist es, von dieser Insel zu entkommen.</text>
        </text-scene>
        <text-scene>
            <text>Im Eingabefeld wirst du nachher die Spielbefehle eingeben. Du steuerst das komplette Spiel mit Kommandos aus der Datenbanksprache SQL.</text>
        </text-scene>
        <text-scene>
            <text>Du kannst kein SQL? Keine Angst, hier werden dir im Laufe des Spiels die einzelnen Kommandos gezeigt.</text>
        </text-scene>
        <text-scene>
            <text>Unten steht, welche Tabellen es gibt: Dorf, Bewohner und Gegenstand. In Klammern stehen die Spaltennamen der Tabellen. Diese head wirst du im Spiel ganz oft brauchen!</text>
        </text-scene>
        <text-scene>
            <text>&#x201E;Hui, was ist passiert? Es scheint, als habe ich als einziger den Flugzeugabsturz &#xFC;berlebt. Gut, dass ich auf dieser Insel gelandet bin. Hier gibt es ja sogar ein paar D&#xF6;rfer.&#x201C;</text>
        </text-scene>
        <select-scene is-row-order-relevant="false" is-col-order-relevant="false" are-col-names-relevant="false">
            <text>&#x201E;Probier doch mal die folgende Abfrage aus: SELECT * FROM dorf&#x201C;</text>
            <sql-solution>SELECT * FROM dorf</sql-solution>
            <sql-placeholder></sql-placeholder>
        </select-scene>
        <select-scene is-row-order-relevant="false" is-col-order-relevant="false" are-col-names-relevant="false">
            <text>&#x201E;Zeige mir die Liste der Bewohner.&#x201C;</text>
            <sql-solution>SELECT * FROM bewohner</sql-solution>
            <sql-placeholder></sql-placeholder>
        </select-scene>
        <text-scene>
            <text>&#x201E;Wow, hier ist einiges los!&#x201C;</text>
        </text-scene>
        <text-scene>
            <text>&#x201E;Mensch, was bin ich hungrig. Ich suche mir erst einmal einen Metzger, bei dem ich eine Scheibe Wurst schnorren kann.&#x201C;</text>
        </text-scene>
        <select-scene is-row-order-relevant="false" is-col-order-relevant="false" are-col-names-relevant="false">
            <text>&#x201E;Probier doch mal die folgende Abfrage aus: SELECT * FROM bewohner WHERE beruf=&#x27;Metzger&#x27;&#x201C;.</text>
            <sql-solution>SELECT * FROM bewohner WHERE beruf=&#x27;Metzger&#x27;</sql-solution>
            <sql-placeholder></sql-placeholder>
        </select-scene>
        <text-scene>
            <text>&#x201E;Hier, lass es dir schmecken! Und pass bei deiner Reise gut auf, dass du dich von b&#xF6;sen Bewohnern fern h&#xE4;lst, solange du unbewaffnet bist. Denn nicht jeder hier ist friedlich!&#x201C;</text>
        </text-scene>
        <select-scene is-row-order-relevant="false" is-col-order-relevant="false" are-col-names-relevant="false">
            <text>&#x201E;Danke Erich! Nagut, dann muss ich mal schauen, welche Bewohner friedlich sind.&#x201C;</text>
            <sql-solution>SELECT * FROM bewohner WHERE status = &#x27;friedlich&#x27;</sql-solution>
            <sql-placeholder></sql-placeholder>
        </select-scene>
        <select-scene is-row-order-relevant="false" is-col-order-relevant="false" are-col-names-relevant="false">
            <text>&#x201E;Lasst uns einen friedlichen Waffenschmied suchen, der mir ein Schwert schmieden kann.&#x201C;</text>
            <sql-solution>SELECT *
FROM   bewohner
WHERE  status = &#x27;friedlich&#x27;
       AND beruf = &#x27;Waffenschmied&#x27;</sql-solution>
            <sql-placeholder></sql-placeholder>
        </select-scene>
        <text-scene>
            <text>Herzlichen Gl&#xFC;ckwunsch! Du hast gewonnen!</text>
        </text-scene>
    </scenes>
    <initial-sql-script>CREATE TABLE IF NOT EXISTS gegenstand (
    gegenstand&#x9;TEXT,
    besitzer&#x9;INTEGER,
    PRIMARY KEY(gegenstand)
);
INSERT INTO gegenstand VALUES (&#x27;Teekanne&#x27;,NULL);
INSERT INTO gegenstand VALUES (&#x27;Spazierstock&#x27;,5);
INSERT INTO gegenstand VALUES (&#x27;Hammer&#x27;,2);
INSERT INTO gegenstand VALUES (&#x27;Ring&#x27;,NULL);
INSERT INTO gegenstand VALUES (&#x27;Kaffeetasse&#x27;,NULL);
INSERT INTO gegenstand VALUES (&#x27;Eimer&#x27;,NULL);
INSERT INTO gegenstand VALUES (&#x27;Seil&#x27;,17);
INSERT INTO gegenstand VALUES (&#x27;Pappkarton&#x27;,NULL);
INSERT INTO gegenstand VALUES (&#x27;Gluehbirne&#x27;,NULL);
CREATE TABLE IF NOT EXISTS dorf (
    dorfnr&#x9;INTEGER,
    name&#x9;TEXT,
    haeuptling&#x9;INTEGER,
    PRIMARY KEY(dorfnr)
);
INSERT INTO dorf VALUES (1,&#x27;Affenstadt&#x27;,1);
INSERT INTO dorf VALUES (2,&#x27;Gurkendorf&#x27;,6);
INSERT INTO dorf VALUES (3,&#x27;Zwiebelhausen&#x27;,13);
CREATE TABLE IF NOT EXISTS bewohner (
    bewohnernr&#x9;INTEGER,
    name&#x9;TEXT,
    dorfnr&#x9;INTEGER,
    geschlecht&#x9;TEXT,
    beruf&#x9;TEXT,
    gold&#x9;INTEGER,
    status&#x9;TEXT,
    PRIMARY KEY(bewohnernr)
);
INSERT INTO bewohner VALUES (1,&#x27;Paul Backmann&#x27;,1,&#x27;m&#x27;,&#x27;Baecker&#x27;,850,&#x27;friedlich&#x27;);
INSERT INTO bewohner VALUES (2,&#x27;Ernst Peng&#x27;,3,&#x27;m&#x27;,&#x27;Waffenschmied&#x27;,280,&#x27;friedlich&#x27;);
INSERT INTO bewohner VALUES (3,&#x27;Rita Ochse&#x27;,1,&#x27;w&#x27;,&#x27;Baecker&#x27;,350,&#x27;friedlich&#x27;);
INSERT INTO bewohner VALUES (4,&#x27;Carl Ochse&#x27;,1,&#x27;m&#x27;,&#x27;Kaufmann&#x27;,250,&#x27;friedlich&#x27;);
INSERT INTO bewohner VALUES (5,&#x27;Dirty Dieter&#x27;,3,&#x27;m&#x27;,&#x27;Schmied&#x27;,650,&#x27;boese&#x27;);
INSERT INTO bewohner VALUES (6,&#x27;Gerd Schlachter&#x27;,2,&#x27;m&#x27;,&#x27;Metzger&#x27;,4850,&#x27;boese&#x27;);
INSERT INTO bewohner VALUES (7,&#x27;Peter Schlachter&#x27;,3,&#x27;m&#x27;,&#x27;Metzger&#x27;,3250,&#x27;boese&#x27;);
INSERT INTO bewohner VALUES (8,&#x27;Arthur Schneiderpaule&#x27;,2,&#x27;m&#x27;,&#x27;Pilot&#x27;,490,&#x27;gefangen&#x27;);
INSERT INTO bewohner VALUES (9,&#x27;Tanja Trommler&#x27;,1,&#x27;w&#x27;,&#x27;Baecker&#x27;,550,&#x27;boese&#x27;);
INSERT INTO bewohner VALUES (10,&#x27;Peter Trommler&#x27;,1,&#x27;m&#x27;,&#x27;Schmied&#x27;,600,&#x27;friedlich&#x27;);
INSERT INTO bewohner VALUES (11,&#x27;Dirty Doerthe&#x27;,3,&#x27;w&#x27;,&#x27;Erntehelfer&#x27;,10,&#x27;boese&#x27;);
INSERT INTO bewohner VALUES (12,&#x27;Otto Armleuchter&#x27;,2,&#x27;m&#x27;,&#x27;Haendler&#x27;,680,&#x27;friedlich&#x27;);
INSERT INTO bewohner VALUES (13,&#x27;Fritz Dichter&#x27;,3,&#x27;m&#x27;,&#x27;Hoerbuchautor&#x27;,420,&#x27;friedlich&#x27;);
INSERT INTO bewohner VALUES (14,&#x27;Enrico Zimmermann&#x27;,3,&#x27;m&#x27;,&#x27;Waffenschmied&#x27;,510,&#x27;boese&#x27;);
INSERT INTO bewohner VALUES (15,&#x27;Helga Rasenkopf&#x27;,2,&#x27;w&#x27;,&#x27;Haendler&#x27;,680,&#x27;friedlich&#x27;);
INSERT INTO bewohner VALUES (16,&#x27;Irene Hutmacher&#x27;,1,&#x27;w&#x27;,&#x27;Haendler&#x27;,770,&#x27;boese&#x27;);
INSERT INTO bewohner VALUES (17,&#x27;Erich Rasenkopf&#x27;,3,&#x27;m&#x27;,&#x27;Metzger&#x27;,990,&#x27;friedlich&#x27;);
INSERT INTO bewohner VALUES (18,&#x27;Rudolf Gaul&#x27;,3,&#x27;m&#x27;,&#x27;Hufschmied&#x27;,390,&#x27;friedlich&#x27;);
INSERT INTO bewohner VALUES (19,&#x27;Anny Flysh&#x27;,2,&#x27;w&#x27;,&#x27;Metzger&#x27;,2280,&#x27;friedlich&#x27;);
    </initial-sql-script>
</game>